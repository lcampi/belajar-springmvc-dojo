<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.artivisi.training</groupId>
	<artifactId>training</artifactId>
	<packaging>pom</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>training</name>
	<inceptionYear>2011</inceptionYear>

	<scm>
		<url>https://github.com/artivisi/belajar</url>
		<connection>git://github.com/artivisi/belajar.git</connection>
		<developerConnection>git@github.com:artivisi/belajar.git</developerConnection>
	</scm>

	<distributionManagement>
		<!-- releases repository -->
		<repository>
			<id>artivisi-nexus</id>
			<name>ArtiVisi Release Repository</name>
			<url>scp://${artifact.repo.host}:${artifact.repo.path.upload}/releases</url>
		</repository>

		<!-- snapshot repository -->
		<snapshotRepository>
			<id>artivisi-nexus</id>
			<name>ArtiVisi Snapshot Repository</name>
			<url>scp://${artifact.repo.host}:${artifact.repo.path.upload}/snapshots</url>
		</snapshotRepository>

	</distributionManagement>


	<!-- Default Properties -->
	<properties>
		<!-- versi library dan framework -->
		<org.springframework.version>3.1.1.RELEASE</org.springframework.version>
		<org.springframework.security.version>3.1.0.RELEASE</org.springframework.security.version>
		<org.hibernate.version>4.1.1.Final</org.hibernate.version>
		<org.hibernate.validator.version>4.2.0.Final</org.hibernate.validator.version>
		<org.slf4j.version>1.6.4</org.slf4j.version>
		<ch.qos.logback.version>1.0.2</ch.qos.logback.version>
		<joda-time.version>2.1</joda-time.version>
		<mysql.version>5.1.19</mysql.version>
		<javassist.version>3.12.0.GA</javassist.version>
		<junit.version>4.10</junit.version>
		<dbunit.version>2.4.8</dbunit.version>
		<jacoco-maven-plugin.version>0.5.3.201107060350</jacoco-maven-plugin.version>
		<servlet.version>2.5</servlet.version>
		<commons-fileupload.version>1.2.2</commons-fileupload.version>
		<commons-io.version>2.0.1</commons-io.version>
		<commons-logging.version>1.1.1</commons-logging.version>
        <guava.version>10.0.1</guava.version>
		<jackson-mapper-asl.version>1.9.6</jackson-mapper-asl.version>
		<cargo-maven2-plugin.version>1.1.3</cargo-maven2-plugin.version>
		<liquibase-maven-plugin.version>2.0.3</liquibase-maven-plugin.version>
		<maven-failsafe-plugin.version>2.10</maven-failsafe-plugin.version>
		<rest-assured.version>1.4</rest-assured.version>

		<!-- konfigurasi database development -->
		<db.driver>com.mysql.jdbc.Driver</db.driver>
		<db.url>jdbc:mysql://localhost</db.url>
		<db.name>training_development</db.name>
		<db.username>root</db.username>
		<db.password>admin</db.password>

		<!-- konfigurasi application server -->
		<appserver.type>tomcat6x</appserver.type>
		<appserver.installation>installed</appserver.installation>
		<appserver.configuration>standalone</appserver.configuration>
		<appserver.installer>http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.33/bin/apache-tomcat-6.0.33.zip</appserver.installer>
		<appserver.ipaddress>localhost</appserver.ipaddress>
		<appserver.port.http>10000</appserver.port.http>
		<appserver.port.ajp>10010</appserver.port.ajp>
		<appserver.deployer.url>http://${appserver.ipaddress}:${appserver.port.http}/manager/text</appserver.deployer.url>
		<appserver.deployer.username>manager</appserver.deployer.username>
		<appserver.deployer.password>test123</appserver.deployer.password>
		<appserver.deployer.context>/</appserver.deployer.context>

		<!-- konfigurasi sonar -->
		<sonar.jacoco.itReportPath>${project.build.directory}/jacoco.exec</sonar.jacoco.itReportPath>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>

		<!-- konfigurasi artifact repository -->
		<artifact.repo.host>forge.artivisi.com</artifact.repo.host>
		<artifact.repo.path.upload>/root/sonatype-work/nexus/storage</artifact.repo.path.upload>
		<artifact.repo.port.http>8080</artifact.repo.port.http>
		<artifact.repo.path.download>nexus/content/groups/public</artifact.repo.path.download>
		<artifact.repo.url>http://${artifact.repo.host}:${artifact.repo.port.http}/${artifact.repo.path.download}</artifact.repo.url>
	</properties>

	<profiles>
		<profile>
			<id>development</id>
			<!-- default profile, ditulis sebagai penjelasan saja -->
		</profile>

		<profile>
			<id>testing</id>
			<properties>
				<!-- konfigurasi database -->
				<db.driver>com.mysql.jdbc.Driver</db.driver>
				<db.url>jdbc:mysql://localhost</db.url>
				<db.name>training_testing</db.name>
				<db.username>root</db.username>
				<db.password>admin</db.password>

				<!-- konfigurasi application server -->
				<appserver.type>tomcat6x</appserver.type>
				<appserver.installation>remote</appserver.installation>
				<appserver.configuration>runtime</appserver.configuration>
				<appserver.installer>http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.33/bin/apache-tomcat-6.0.33.zip</appserver.installer>
				<appserver.ipaddress>localhost</appserver.ipaddress>
				<appserver.port.http>8080</appserver.port.http>
				<appserver.port.ajp>8009</appserver.port.ajp>
				<appserver.deployer.url>http://${appserver.ipaddress}:${appserver.port.http}/manager</appserver.deployer.url>
				<appserver.deployer.username>manager</appserver.deployer.username>
				<appserver.deployer.password>test123</appserver.deployer.password>
				<appserver.deployer.context>/training</appserver.deployer.context>
			</properties>
		</profile>

	</profiles>


	<dependencies>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${commons-logging.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${org.slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${ch.qos.logback.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${joda-time.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<configuration>
					<append>true</append>
				</configuration>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>logs</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.2.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			
		</plugins>
	</build>
  <modules>
    <module>training-config</module>
    <module>training-domain</module>
    <module>training-service</module>
    <module>training-web</module>
    <module>training-deployer</module>
  </modules>
</project>